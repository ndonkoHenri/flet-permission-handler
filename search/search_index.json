{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"flet-permission-handler","text":"<p>A Flet extension that simplifies working with device permissions.</p> <p>It is based on the permission_handler Flutter package and brings similar functionality to Flet, including:</p> <ul> <li>Requesting permissions at runtime</li> <li>Checking the current permission status (e.g., granted, denied)</li> <li>Redirecting users to system settings to manually grant permissions</li> </ul>"},{"location":"#platform-support","title":"Platform Support","text":"<p>This package supports the following platforms:</p> Platform Supported Windows \u2705 macOS \u274c Linux \u274c iOS \u2705 Android \u2705 Web \u2705"},{"location":"#usage","title":"Usage","text":""},{"location":"#installation","title":"Installation","text":"<p>To install the <code>flet-permission-handler</code> package and add it to your project dependencies:</p> uv <pre><code>uv add flet-permission-handler\n</code></pre> pip <pre><code>pip install flet-permission-handler  # (1)!\n</code></pre> <ol> <li>After this, you will have to manually add this package to your <code>requirements.txt</code> or <code>pyproject.toml</code>.</li> </ol> poetry <pre><code>poetry add flet-permission-handler\n</code></pre>"},{"location":"#declaring-permissions","title":"Declaring Permissions","text":"<p>Ensure that your app has the necessary permissions declared.</p>"},{"location":"#example","title":"Example","text":"main.py<pre><code>import flet as ft\n\nimport flet_permission_handler as fph\n\n\ndef main(page: ft.Page):\n    page.appbar = ft.AppBar(title=\"PermissionHandler Playground\")\n\n    def show_snackbar(message: str):\n        page.show_dialog(ft.SnackBar(ft.Text(message)))\n\n    async def get_permission_status(e: ft.Event[ft.OutlinedButton]):\n        status = await p.get_status_async(fph.Permission.MICROPHONE)\n        show_snackbar(f\"Microphone permission status: {status.name}\")\n\n    async def request_permission(e: ft.Event[ft.OutlinedButton]):\n        status = await p.request_async(fph.Permission.MICROPHONE)\n        show_snackbar(f\"Requested microphone permission: {status.name}\")\n\n    async def open_app_settings(e: ft.Event[ft.OutlinedButton]):\n        show_snackbar(\"Opening app settings...\")\n        await p.open_app_settings_async()\n\n    p = fph.PermissionHandler()\n    page.services.append(p)  # (1)!\n\n    page.add(\n        ft.OutlinedButton(\"Open app settings\", on_click=open_app_settings),\n        ft.OutlinedButton(\"Request Microphone permission\", on_click=request_permission),\n        ft.OutlinedButton(\n            \"Get Microphone permission status\", on_click=get_permission_status\n        ),\n    )\n\n\nft.run(main)\n</code></pre> <ol> <li>The <code>PermissionHandler</code> instance must be added to the    <code>Page.services</code> list to work properly.</li> </ol>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#020-2025-06-26","title":"0.2.0 - 2025-06-26","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Deployed online documentation: https://flet-dev.github.io/flet-permissionhandler/</li> <li><code>PermissionHandler</code> control new methods: <ul> <li><code>get_status_async</code></li> <li><code>request_async</code></li> <li><code>open_app_settings_async</code></li> </ul> </li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Refactored <code>PermissionHandler</code> control to use <code>@ft.control</code> dataclass-style definition and switched to <code>Service</code> control type</li> </ul>"},{"location":"changelog/#breaking-changes","title":"Breaking Changes","text":"<ul> <li>Enum <code>PermissionType</code> renamed to <code>Permission</code></li> <li><code>PermissionHandler</code> method <code>check_permission_async</code> renamed to <code>get_status_async</code>, with parameters changed: <ul> <li><code>of</code> \u2192 <code>permission</code> (type: <code>PermissionType</code> \u2192 <code>Permission</code>)</li> <li><code>wait_timeout</code> \u2192 <code>timeout</code></li> </ul> </li> <li><code>PermissionHandler</code> method <code>request_permission_async</code> renamed to <code>request_async</code>, with parameters changed: <ul> <li><code>of</code> \u2192 <code>permission</code> (type: <code>PermissionType</code> \u2192 <code>Permission</code>)</li> <li><code>wait_timeout</code> \u2192 <code>timeout</code></li> </ul> </li> <li><code>PermissionHandler</code> method <code>open_app_settings_async</code> parameter <code>wait_timeout</code> renamed to <code>timeout</code> (type: <code>Optional[float]</code> \u2192 <code>int</code>)</li> <li>Removed sync methods from <code>PermissionHandler</code>: <ul> <li><code>check_permission</code> \u2192 use <code>get_status_async</code> instead</li> <li><code>request_permission</code> \u2192 use <code>request_async</code> instead</li> </ul> </li> <li><code>open_app_settings</code> \u2192 use <code>open_app_settings_async</code> instead</li> <li><code>PermissionHandler</code> must now be added to <code>Page.services</code> before being used instead of <code>Page.overlay</code>.</li> <li><code>PermissionHandler</code> can now only be used on the following platforms: Windows, iOS, Android, and Web. A <code>FletUnimplementedPlatformEception</code> will be raised if used on unsupported platforms.</li> </ul>"},{"location":"changelog/#010-2025-01-15","title":"0.1.0 - 2025-01-15","text":"<p>Initial release.</p>"},{"location":"license/","title":"License","text":"<pre><code>                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</code></pre>"},{"location":"permission_handler/","title":"PermissionHandler","text":""},{"location":"permission_handler/#flet_permission_handler.permission_handler.PermissionHandler","title":"<code>PermissionHandler</code>","text":"<p>               Bases: <code>Service</code></p> <p>Manages permissions for the application.</p> <p>This control is non-visual and should be added to <code>Page.services</code> list.</p> Note <p>Currently only supported on Android, iOS, Windows, and Web platforms.</p> <p>Attributes:     foo: Description for me. Raises:     FletUnsupportedPlatformException: If the platform is not supported.</p>"},{"location":"permission_handler/#flet_permission_handler.permission_handler.PermissionHandler.data","title":"<code>data: Any = skip_field()</code>","text":"<p>Arbitrary data of any type that can be attached to a control.</p>"},{"location":"permission_handler/#flet_permission_handler.permission_handler.PermissionHandler.foo","title":"<code>foo: Union[int, Tuple[float, float]] | None</code>","text":""},{"location":"permission_handler/#flet_permission_handler.permission_handler.PermissionHandler.key","title":"<code>key: str | int | float | bool | ValueKey | ScrollKey | None = None</code>","text":""},{"location":"permission_handler/#flet_permission_handler.permission_handler.PermissionHandler.page","title":"<code>page: Page | PageView | None</code>","text":"<p>The page (of type <code>Page</code> or <code>PageView</code>) to which this control belongs to.</p>"},{"location":"permission_handler/#flet_permission_handler.permission_handler.PermissionHandler.parent","title":"<code>parent: BaseControl | None</code>","text":"<p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"permission_handler/#flet_permission_handler.permission_handler.PermissionHandler.get_status_async","title":"<code>get_status_async(permission: Permission, timeout: int = 10) -&gt; PermissionStatus | None</code>","text":"<p>Gets the current status of the given <code>permission</code>.</p> PARAMETER DESCRIPTION <code>permission</code> <p>The <code>Permission</code> to check the status for.</p> <p> TYPE: <code>Permission</code> </p> <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>int</code> DEFAULT: <code>10</code> </p> <p>Returns:     A <code>PermissionStatus</code> if the status is known, otherwise <code>None</code>. Raises:     TimeoutError: If the request times out.</p>"},{"location":"permission_handler/#flet_permission_handler.permission_handler.PermissionHandler.open_app_settings_async","title":"<code>open_app_settings_async(timeout: int = 10) -&gt; bool</code>","text":"<p>Opens the app settings page.</p> PARAMETER DESCRIPTION <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>int</code> DEFAULT: <code>10</code> </p> <p>Returns:     <code>True</code> if the app settings page could be opened, otherwise <code>False</code>. Raises:     TimeoutError: If the request times out.</p>"},{"location":"permission_handler/#flet_permission_handler.permission_handler.PermissionHandler.request_async","title":"<code>request_async(permission: Permission, timeout: int = 60) -&gt; PermissionStatus | None</code>","text":"<p>Request the user for access to the <code>permission</code> if access hasn't already been granted access before.</p> PARAMETER DESCRIPTION <code>permission</code> <p>The <code>Permission</code> to request.</p> <p> TYPE: <code>Permission</code> </p> <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>int</code> DEFAULT: <code>60</code> </p> <p>Returns:     The new <code>PermissionStatus</code> after the request, or <code>None</code> if the request was not successful. Raises:     TimeoutError: If the request times out.</p>"},{"location":"types/permission/","title":"Permission","text":""},{"location":"types/permission/#flet_permission_handler.types.Permission","title":"<code>Permission</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Defines the permissions which can be checked and requested.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.ACCESS_MEDIA_LOCATION","title":"<code>ACCESS_MEDIA_LOCATION = 'accessMediaLocation'</code>","text":"<p>Permission for accessing the device's media library.</p> <p>Allows an application to access any geographic locations persisted in the user's shared collection.</p> Note <p>Only supported on Android 10+ (API 29+) only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.ACCESS_NOTIFICATION_POLICY","title":"<code>ACCESS_NOTIFICATION_POLICY = 'accessNotificationPolicy'</code>","text":"<p>Permission for accessing the device's notification policy.</p> <p>Allows the user to access the notification policy of the phone. Example: Allows app to turn on and off do-not-disturb.</p> Note <p>Only supported on Android Marshmallow+ (API 23+) only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.ACTIVITY_RECOGNITION","title":"<code>ACTIVITY_RECOGNITION = 'activityRecognition'</code>","text":"<p>Permission for accessing the activity recognition.</p> Note <p>Only supported on Android 10+ (API 29+) only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.APP_TRACKING_TRANSPARENCY","title":"<code>APP_TRACKING_TRANSPARENCY = 'appTrackingTransparency'</code>","text":"<p>Permission for accessing the device's tracking state. Allows user to accept that your app collects data about end users and shares it with other companies for purposes of tracking across apps and websites.</p> Note <p>Only supported on iOS only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.ASSISTANT","title":"<code>ASSISTANT = 'assistant'</code>","text":"Info <ul> <li>Android: Nothing</li> <li>iOS: SiriKit</li> </ul>"},{"location":"types/permission/#flet_permission_handler.types.Permission.AUDIO","title":"<code>AUDIO = 'audio'</code>","text":"<p>Permission for accessing the device's audio files from external storage.</p> Note <p>Only supported on Android 13+ (API 33+) only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.BACKGROUND_REFRESH","title":"<code>BACKGROUND_REFRESH = 'backgroundRefresh'</code>","text":"<p>Permission for reading the current background refresh status.</p> Note <p>Only supported on iOS only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.BLUETOOTH","title":"<code>BLUETOOTH = 'bluetooth'</code>","text":"<p>Permission for accessing the device's bluetooth adapter state.</p> <p>Depending on the platform and version, the requirements are slightly different:</p> Info <ul> <li>Android: always allowed.</li> <li>iOS:<ul> <li>13 and above: The authorization state of Core Bluetooth manager.</li> <li>below 13: always allowed.</li> </ul> </li> </ul>"},{"location":"types/permission/#flet_permission_handler.types.Permission.BLUETOOTH_ADVERTISE","title":"<code>BLUETOOTH_ADVERTISE = 'bluetoothAdvertise'</code>","text":"<p>Permission for advertising Bluetooth devices Allows the user to make this device discoverable to other Bluetooth devices.</p> Note <p>Only supported on Android 12+ (API 31+) only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.BLUETOOTH_CONNECT","title":"<code>BLUETOOTH_CONNECT = 'bluetoothConnect'</code>","text":"<p>Permission for connecting to Bluetooth devices. Allows the user to connect with already paired Bluetooth devices.</p> Note <p>Only supported on Android 12+ (API 31+) only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.BLUETOOTH_SCAN","title":"<code>BLUETOOTH_SCAN = 'bluetoothScan'</code>","text":"<p>Permission for scanning for Bluetooth devices.</p> Note <p>Only supported on Android 12+ (API 31+) only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.CALENDAR_FULL_ACCESS","title":"<code>CALENDAR_FULL_ACCESS = 'calendarFullAccess'</code>","text":"<p>Permission for reading from and writing to the device's calendar.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.CALENDAR_WRITE_ONLY","title":"<code>CALENDAR_WRITE_ONLY = 'calendarWriteOnly'</code>","text":"<p>Permission for writing to the device's calendar.</p> <p>On iOS 16 and lower, this permission is identical to <code>Permission.CALENDAR_FULL_ACCESS</code>.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.CAMERA","title":"<code>CAMERA = 'camera'</code>","text":"<p>Permission for accessing the device's camera.</p> Info <ul> <li>Android: Camera</li> <li>iOS: Photos (Camera Roll and Camera)</li> </ul>"},{"location":"types/permission/#flet_permission_handler.types.Permission.CONTACTS","title":"<code>CONTACTS = 'contacts'</code>","text":"<p>Permission for accessing the device's contacts.</p> Info <ul> <li>Android: Contacts</li> <li>iOS: AddressBook</li> </ul>"},{"location":"types/permission/#flet_permission_handler.types.Permission.CRITICAL_ALERTS","title":"<code>CRITICAL_ALERTS = 'criticalAlerts'</code>","text":"<p>Permission for sending critical alerts. Allow for sending notifications that override the ringer.</p> Note <p>Only supported on iOS only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.IGNORE_BATTERY_OPTIMIZATIONS","title":"<code>IGNORE_BATTERY_OPTIMIZATIONS = 'ignoreBatteryOptimizations'</code>","text":"<p>Permission for accessing ignore battery optimizations.</p> Note <p>Only supported on Android only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.LOCATION","title":"<code>LOCATION = 'location'</code>","text":"<p>Permission for accessing the device's location.</p> Info <ul> <li>Android: Fine and Coarse Location</li> <li>iOS: CoreLocation (Always and WhenInUse)</li> </ul>"},{"location":"types/permission/#flet_permission_handler.types.Permission.LOCATION_ALWAYS","title":"<code>LOCATION_ALWAYS = 'locationAlways'</code>","text":"Info <p>iOS: CoreLocation (Always)</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.LOCATION_WHEN_IN_USE","title":"<code>LOCATION_WHEN_IN_USE = 'locationWhenInUse'</code>","text":"<p>Permission for accessing the device's location when the app is running in the foreground.</p> Info <ul> <li>Android: Fine and Coarse Location</li> <li>iOS: CoreLocation - WhenInUse</li> </ul>"},{"location":"types/permission/#flet_permission_handler.types.Permission.MANAGE_EXTERNAL_STORAGE","title":"<code>MANAGE_EXTERNAL_STORAGE = 'manageExternalStorage'</code>","text":"<p>Permission for accessing the device's external storage. Allows an application a broad access to external storage in scoped storage.</p> <p>You should request this permission only when your app cannot  effectively make use of the more privacy-friendly APIs. For more information: https://developer.android.com/training/data-storage/manage-all-files</p> Info <p>When the privacy-friendly APIs (i.e. Storage Access Framework or the MediaStore APIs) is all your app needs, the [PermissionGroup.storage] are the only permissions you need to request.</p> <p>If the usage of this permission is needed, you have to fill out  the Permission Declaration Form upon submitting your app to the Google Play Store.  More details: https://support.google.com/googleplay/android-developer/answer/9214102#zippy=</p> Note <p>Only supported on Android 11+ (API 30+) only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.MEDIA_LIBRARY","title":"<code>MEDIA_LIBRARY = 'mediaLibrary'</code>","text":"<p>Permission for accessing the device's media library.</p> Note <p>Only supported on iOS 9.3+ only</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.MICROPHONE","title":"<code>MICROPHONE = 'microphone'</code>","text":"<p>Permission for accessing the device's microphone.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.NEARBY_WIFI_DEVICES","title":"<code>NEARBY_WIFI_DEVICES = 'nearbyWifiDevices'</code>","text":"<p>Permission for connecting to nearby devices via Wi-Fi.</p> Note <p>Only supported on Android 13+ (API 33+) only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.NOTIFICATION","title":"<code>NOTIFICATION = 'notification'</code>","text":"<p>Permission for pushing notifications.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.PHONE","title":"<code>PHONE = 'phone'</code>","text":"<p>Permission for accessing the device's phone state.</p> Note <p>Only supported on Android only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.PHOTOS","title":"<code>PHOTOS = 'photos'</code>","text":"<p>Permission for accessing (read &amp; write) the device's photos.</p> <p>If you only want to add photos, you can use  the <code>PHOTOS_ADD_ONLY</code> permission instead (iOS only).</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.PHOTOS_ADD_ONLY","title":"<code>PHOTOS_ADD_ONLY = 'photosAddOnly'</code>","text":"<p>Permission for adding photos to the device's photo library (iOS only).</p> <p>If you want to read them as well, use the <code>Permission.PHOTOS</code> permission instead.</p> Info <p>iOS: Photos (14+ read &amp; write access level)</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.REMINDERS","title":"<code>REMINDERS = 'reminders'</code>","text":"<p>Permission for accessing the device's reminders.</p> Note <p>Only supported on iOS only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.REQUEST_INSTALL_PACKAGES","title":"<code>REQUEST_INSTALL_PACKAGES = 'requestInstallPackages'</code>","text":"<p>Permission for requesting installing packages.</p> Note <p>Only supported on Android Marshmallow+ (API 23+) only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.SCHEDULE_EXACT_ALARM","title":"<code>SCHEDULE_EXACT_ALARM = 'scheduleExactAlarm'</code>","text":"<p>Permission for scheduling exact alarms.</p> Note <p>Only supported on Android 12+ (API 31+) only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.SENSORS","title":"<code>SENSORS = 'sensors'</code>","text":"<p>Permission for accessing the device's sensors.</p> Info <ul> <li>Android: Body Sensors</li> <li>iOS: CoreMotion</li> </ul>"},{"location":"types/permission/#flet_permission_handler.types.Permission.SENSORS_ALWAYS","title":"<code>SENSORS_ALWAYS = 'sensorsAlways'</code>","text":"<p>Permission for accessing the device's sensors in background.</p> Note <p>Only supported on Android 13+ (API 33+) only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.SMS","title":"<code>SMS = 'sms'</code>","text":"<p>Permission for sending and reading SMS messages (Android only).</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.SPEECH","title":"<code>SPEECH = 'speech'</code>","text":"<p>Permission for accessing speech recognition.</p> Info <ul> <li>Android: Requests access to microphone (identical to requesting <code>Permission.MICROPHONE</code>).</li> <li>iOS: Requests speech access (different from requesting <code>Permission.MICROPHONE</code>).</li> </ul>"},{"location":"types/permission/#flet_permission_handler.types.Permission.STORAGE","title":"<code>STORAGE = 'storage'</code>","text":"<p>Permission for accessing external storage.</p> <p>Depending on the platform and version, the requirements are slightly different:</p> Info <ul> <li> <p>Android:</p> <ul> <li> <p>On Android 13 (API 33) and above, this permission is deprecated and always returns <code>PermissionStatus.denied</code>. Instead use <code>Permission.PHOTOS</code>, <code>Permission.VIDEO</code>, <code>Permission.AUDIO</code> or <code>Permission.MANAGE_EXTERNAL_STORAGE</code>.  For more information see this.</p> </li> <li> <p>Below Android 13 (API 33), the <code>READ_EXTERNAL_STORAGE</code> and <code>WRITE_EXTERNAL_STORAGE</code> permissions are requested (depending on the definitions in the AndroidManifest.xml) file.</p> </li> <li>iOS: Access to folders like <code>Documents</code> or <code>Downloads</code>. Implicitly granted.</li> </ul> </li> </ul>"},{"location":"types/permission/#flet_permission_handler.types.Permission.SYSTEM_ALERT_WINDOW","title":"<code>SYSTEM_ALERT_WINDOW = 'systemAlertWindow'</code>","text":"<p>Permission for creating system alert window. Allows an app to create windows shown on top of all other apps.</p> Note <p>Only supported on Android only.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.UNKNOWN","title":"<code>UNKNOWN = 'unknown'</code>","text":"<p>The unknown only used for return type, never requested.</p>"},{"location":"types/permission/#flet_permission_handler.types.Permission.VIDEOS","title":"<code>VIDEOS = 'videos'</code>","text":"<p>Permission for accessing the device's video files from external storage.</p> Note <p>Only supported on Android 13+ (API 33+) only.</p>"},{"location":"types/permission_status/","title":"PermissionStatus","text":""},{"location":"types/permission_status/#flet_permission_handler.types.PermissionStatus","title":"<code>PermissionStatus</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Defines the state of a <code>Permission</code>.</p>"},{"location":"types/permission_status/#flet_permission_handler.types.PermissionStatus.DENIED","title":"<code>DENIED = 'denied'</code>","text":"<p>The user denied access to the requested feature, permission needs to be asked first.</p>"},{"location":"types/permission_status/#flet_permission_handler.types.PermissionStatus.GRANTED","title":"<code>GRANTED = 'granted'</code>","text":"<p>The user granted access to the requested feature.</p>"},{"location":"types/permission_status/#flet_permission_handler.types.PermissionStatus.LIMITED","title":"<code>LIMITED = 'limited'</code>","text":"<p>The user has authorized this application for limited access. So far this is only relevant for the Photo Library picker.</p> Note <p>Only supported on iOS (iOS14+) and Android (Android 14+).</p>"},{"location":"types/permission_status/#flet_permission_handler.types.PermissionStatus.PERMANENTLY_DENIED","title":"<code>PERMANENTLY_DENIED = 'permanentlyDenied'</code>","text":"<p>Permission to the requested feature is permanently denied,  the permission dialog will not be shown when requesting this permission.  The user may still change the permission status in the settings.</p> Note <ul> <li> <p>On Android: </p> <ul> <li> <p>Android 11+ (API 30+): whether the user denied the permission for a second time.</p> </li> <li> <p>Below Android 11 (API 30): whether the user denied access  to the requested feature and selected to never again show a request.</p> </li> <li>On iOS: If the user has denied access to the requested feature.</li> </ul> </li> </ul>"},{"location":"types/permission_status/#flet_permission_handler.types.PermissionStatus.PROVISIONAL","title":"<code>PROVISIONAL = 'provisional'</code>","text":"<p>The application is provisionally authorized to post non-interruptive user notifications.</p> Note <p>Only supported on iOS (iOS 12+).</p>"},{"location":"types/permission_status/#flet_permission_handler.types.PermissionStatus.RESTRICTED","title":"<code>RESTRICTED = 'restricted'</code>","text":"<p>The OS denied access to the requested feature. The user cannot change this app's status, possibly due to active restrictions such as parental controls being in place.</p> Note <p>Only supported on iOS.</p>"}]}